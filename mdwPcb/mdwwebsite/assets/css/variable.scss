$--color-primary:#4185EC; // 主要颜色
$--color-text-primary:hsl(0, 0%, 20%); // 主要文字颜色
$--color-text-secondary:#999999; // 次要文字颜色
$--color-text-prompt:#999999; // 提示文字纹色
$--color-ornament:#f19946; // 点缀色

$--border-color-base:#d6d6d6;

@mixin align-items{ // 水平居中
    display: flex;
    align-items: center;
}


@mixin abs($top, $right: null, $bottom: null, $left: null) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin fixed($top, $right: null, $bottom: null, $left: null) {
    position: fixed;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin site($left: 0, $right: null) {
    position: absolute;
    left: $left;
    right: $right;
    top: 50%;
    transform: translateY(-50%);
}
@mixin ellipsis($column: 1) {
    overflow: hidden;
    -o-text-overflow: ellipsis;
    text-overflow: ellipsis;
    @if $column == 1 {
        white-space: nowrap;
    } @else {
        display: -webkit-box;
        white-space: normal !important;
        word-wrap: break-word;
        -webkit-line-clamp: $column;
        -webkit-box-orient: vertical;
    }
}
@mixin siteCenter() {
    @include abs(50%, 50%);
    transform: translate(50%, -50%);
}

@mixin tst($property: all, $duration: 0.3s, $delay: 0s, $fun: cubic-bezier(0.25, 0.1, 0.25, 1)) {
    // saas不区分空格
    $split-values: str-split($property, ",");
    $lastStr: $duration $delay $fun unquote(",");
    $list: ();

    @each $value in $split-values {
        $list: append($list, (unquote($value) $lastStr));
    }

    $list: quote($list);
    $transition: str-slice($list, 0, (str-length($list) - 2));
    transition: unquote($transition);
}

// STR-分裂
@function str-split($str, $separator) {
    $string: quote($str);
    // empty array/list
    $split-arr: ();
    // first index of separator in string
    $index: str-index($string, $separator);

    // loop through string
    @while $index !=null {
        // get the substring from the first character to the separator
        $item: str-slice($string, 1, $index - 1);
        // push item to array
        $split-arr: append($split-arr, $item);
        // remove item and separator from string
        $string: str-slice($string, $index + 1);
        // find new index of separator
        $index: str-index($string, $separator);
    }

    // add the remaining string to list (the last item)
    $split-arr: append($split-arr, $string);

    @return $split-arr;
}

@mixin flex($direction: column) {
    display: flex;
    flex-direction: $direction;
}

/**
 * @description iphonex及iphone系列兼容
 * @param {String} $prop属性名字如height，padding
 * @param {String} $num初始高度，只能写一些，不然低版本安卓会出问题
 * @params {String} $area 安全区域位置===》top或者bottom
 * @params {String} $direction 方向（属性的拼接值）如果$prop是padding，它是bottom的话，拼接起来就是padding-bocttom
 * @params {String} $plus 属性的加减，这边会创建出来calc来计算属性
 */
@mixin iosSafeArea($prop: padding, $num: 0px, $area: top, $direction: null, $plus: "+") {
    $newPro: #{$prop}#{if($direction, ("-" + $direction), "")};
    #{$newPro}: #{$num};
    #{$newPro}: calc(#{$num} #{$plus} constant(safe-area-inset-#{$area}));
    #{$newPro}: calc(#{$num} #{$plus} env(safe-area-inset-#{$area}));
}
$base-font-size: 75px;
@function px2rem($px, $base-font-size: 75px) {
    @return ($px / $base-font-size) * 1rem;
}
